syntax = "proto3";

option csharp_namespace = "GameApi.Proto";

package GameManagementApi;

service BotGameManager {
	rpc GetChallengers (Empty) returns (ChallengersList);
	rpc DoPlay (GameRequest) returns (GameResponse);
}

service MultiplayerGameManager {
	rpc CreatePairing (CreatePairingRequest) returns (CreatePairingResponse);
	rpc JoinPairing (JoinPairingRequest) returns (Empty);
	rpc PairingStatus (PairingStatusRequest) returns (stream PairingStatusResponse);
	rpc Pick (PickRequest) returns (Empty);
	rpc GameStatus (GameStatusRequest) returns (stream GameStatusResponse);
}

message Empty {}

message ChallengerInfo {
	string name = 1;
	string displayName = 2;
}

message ChallengersList {
	int32 count = 1;
	repeated ChallengerInfo challengers = 2;
}


message GameRequest {
	string challenger = 1;
	string username = 2;
    int32 pick = 3;
    bool twitterLogged = 4;
}

enum Result
{
	Tie = 0;
	Player = 1;
	Challenger = 2;
}

message GameResponse {
	string challenger = 1;
	int32 challengerPick = 2;
	string user = 3;
	int32 userPick = 4;
	Result result = 5;
	bool isValid = 6;
}


message CreatePairingRequest {
	string username = 1;
}

message CreatePairingResponse {
	string token = 1;
}

message JoinPairingRequest {
	string username = 1;
	string token = 2;
}

message PairingStatusRequest {
	string username = 1;
	bool isMaster = 2;
}

message PairingStatusResponse {
	string matchId = 1;
	string status = 2;
}

message PickRequest {
	string matchId = 1;
	string username = 2;
	int32 pick = 3;
}

message GameStatusRequest {
	string matchId = 1;
	string username = 2;
}

message GameStatusResponse {
	string challenger = 1;
	int32 challengerPick = 2;
	string user = 3;
	int32 userPick = 4;

	Result result = 5;
	bool isCancelled = 6;
	bool isMaster = 7;
	bool isFinished = 8;
}