@layout MainLayout
@page "/"

@inject IOptions<TwitterOptions> TwitterOptions
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="index-content">
    <div class="login">
        <div class="login-section">
            <form>
                <img src='@("/assets/images/png/logo.png")'>
                <div class="subtitle-container">
                    <h2 class="subtitle">The geek version of rock-paper-scissors.</h2>
                    <h2 class="subtitle">Play with a friend or try to defeat our bot!</h2>
                </div>

                @if (string.IsNullOrWhiteSpace(Username))
                {
                    <input name="username" class="user" type="text" placeholder="Type Username" required />

                    <div class="sign_twitter">
                        @if (!string.IsNullOrWhiteSpace(TwitterOptions?.Value?.ConsumerKey) && !string.IsNullOrWhiteSpace(TwitterOptions?.Value?.ConsumerSecret))
                        {
                            <span>or <a href="/api/account/login/twitter">Sign in with Twitter</a></span>
                        }
                    </div>
                }
                else
                {
                    <div class="subtitle-container">
                        <h2 class="subtitle">HELLO, @Username.ToUpperInvariant()</h2>
                    </div>
                }

                <div class="custom-button-container">
                    <div class="custom-button">
                        <button type="button" @onclick="() => Play(BotsRedirect)" class="custom-button-link">Play with a bot</button>
                    </div>
                    <div class="custom-button">
                        <button type="button" @onclick="() => Play(MultiplayerRedirect)" class="custom-button-link">Play with a friend</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div class="github">
        <a class="github-text" target="_blank" href="https://github.com/microsoft/RockPaperScissorsLizardSpock">Get the code from GitHub</a>
    </div>
</div>

<CookiesBanner />

@code
{
    const string BotsRedirect = "/challenger";
    const string MultiplayerRedirect = "/lobby";
    public string Username { get; set; }
    public bool IsTwitterUser { get; set; }

    [Parameter] public string RedirectUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var state = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        Username = state.User?.Identity?.Name ?? string.Empty;
        IsTwitterUser = state.User.Identity.AuthenticationType == "Twitter";

        if (!string.IsNullOrWhiteSpace(Username) && !string.IsNullOrWhiteSpace(RedirectUrl))
        {
            NavigationManager.NavigateTo(RedirectUrl);
        }
    }

    protected void Play(string redirect)
    {
        if (!string.IsNullOrWhiteSpace(Username))
        {
            var uri = redirect;
            if (!IsTwitterUser)
            {
                var encodedUsername = System.Web.HttpUtility.UrlEncode(Username);
                var encodedRedirect = System.Web.HttpUtility.UrlEncode(redirect);
                uri = $"/api/account/login?username={encodedUsername}&redirectUrl={encodedRedirect}";
            }

            NavigationManager.NavigateTo(uri);
        }
    }
}